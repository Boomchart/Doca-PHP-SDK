<?php

declare(strict_types=1);

/*
 * DocaLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace DocaLib\Models;

use stdClass;

class InitiatePaymentRequest implements \JsonSerializable
{
    /**
     * @var string
     */
    private $amount;

    /**
     * @var string
     */
    private $currency;

    /**
     * @var string
     */
    private $email;

    /**
     * @var string
     */
    private $firstName;

    /**
     * @var string
     */
    private $lastName;

    /**
     * @var string
     */
    private $callbackUrl;

    /**
     * @var string
     */
    private $returnUrl;

    /**
     * @var string
     */
    private $txRef;

    /**
     * @var Customization
     */
    private $customization;

    /**
     * @var Meta
     */
    private $meta;

    /**
     * @param string $amount
     * @param string $currency
     * @param string $email
     * @param string $firstName
     * @param string $lastName
     * @param string $callbackUrl
     * @param string $returnUrl
     * @param string $txRef
     * @param Customization $customization
     * @param Meta $meta
     */
    public function __construct(
        string $amount,
        string $currency,
        string $email,
        string $firstName,
        string $lastName,
        string $callbackUrl,
        string $returnUrl,
        string $txRef,
        Customization $customization,
        Meta $meta
    ) {
        $this->amount = $amount;
        $this->currency = $currency;
        $this->email = $email;
        $this->firstName = $firstName;
        $this->lastName = $lastName;
        $this->callbackUrl = $callbackUrl;
        $this->returnUrl = $returnUrl;
        $this->txRef = $txRef;
        $this->customization = $customization;
        $this->meta = $meta;
    }

    /**
     * Returns Amount.
     */
    public function getAmount(): string
    {
        return $this->amount;
    }

    /**
     * Sets Amount.
     *
     * @required
     * @maps amount
     */
    public function setAmount(string $amount): void
    {
        $this->amount = $amount;
    }

    /**
     * Returns Currency.
     */
    public function getCurrency(): string
    {
        return $this->currency;
    }

    /**
     * Sets Currency.
     *
     * @required
     * @maps currency
     */
    public function setCurrency(string $currency): void
    {
        $this->currency = $currency;
    }

    /**
     * Returns Email.
     */
    public function getEmail(): string
    {
        return $this->email;
    }

    /**
     * Sets Email.
     *
     * @required
     * @maps email
     */
    public function setEmail(string $email): void
    {
        $this->email = $email;
    }

    /**
     * Returns First Name.
     */
    public function getFirstName(): string
    {
        return $this->firstName;
    }

    /**
     * Sets First Name.
     *
     * @required
     * @maps first_name
     */
    public function setFirstName(string $firstName): void
    {
        $this->firstName = $firstName;
    }

    /**
     * Returns Last Name.
     */
    public function getLastName(): string
    {
        return $this->lastName;
    }

    /**
     * Sets Last Name.
     *
     * @required
     * @maps last_name
     */
    public function setLastName(string $lastName): void
    {
        $this->lastName = $lastName;
    }

    /**
     * Returns Callback Url.
     */
    public function getCallbackUrl(): string
    {
        return $this->callbackUrl;
    }

    /**
     * Sets Callback Url.
     *
     * @required
     * @maps callback_url
     */
    public function setCallbackUrl(string $callbackUrl): void
    {
        $this->callbackUrl = $callbackUrl;
    }

    /**
     * Returns Return Url.
     */
    public function getReturnUrl(): string
    {
        return $this->returnUrl;
    }

    /**
     * Sets Return Url.
     *
     * @required
     * @maps return_url
     */
    public function setReturnUrl(string $returnUrl): void
    {
        $this->returnUrl = $returnUrl;
    }

    /**
     * Returns Tx Ref.
     */
    public function getTxRef(): string
    {
        return $this->txRef;
    }

    /**
     * Sets Tx Ref.
     *
     * @required
     * @maps tx_ref
     */
    public function setTxRef(string $txRef): void
    {
        $this->txRef = $txRef;
    }

    /**
     * Returns Customization.
     */
    public function getCustomization(): Customization
    {
        return $this->customization;
    }

    /**
     * Sets Customization.
     *
     * @required
     * @maps customization
     */
    public function setCustomization(Customization $customization): void
    {
        $this->customization = $customization;
    }

    /**
     * Returns Meta.
     */
    public function getMeta(): Meta
    {
        return $this->meta;
    }

    /**
     * Sets Meta.
     *
     * @required
     * @maps meta
     */
    public function setMeta(Meta $meta): void
    {
        $this->meta = $meta;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        $json['amount']        = $this->amount;
        $json['currency']      = $this->currency;
        $json['email']         = $this->email;
        $json['first_name']    = $this->firstName;
        $json['last_name']     = $this->lastName;
        $json['callback_url']  = $this->callbackUrl;
        $json['return_url']    = $this->returnUrl;
        $json['tx_ref']        = $this->txRef;
        $json['customization'] = $this->customization;
        $json['meta']          = $this->meta;

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
